(()=>{"use strict";const e=new class{constructor(){this.api="undefined"!=typeof chrome&&chrome.runtime?chrome:browser}handleRuntimeError(e,t,a){this.api.runtime.lastError?t(new Error(this.api.runtime.lastError.message)):e(a)}get isChrome(){return"undefined"!=typeof chrome&&!!chrome.runtime}get isFirefox(){return!this.isChrome&&"undefined"!=typeof browser&&!!browser.runtime}get manifestVersion(){return this.api.runtime.getManifest().manifest_version}get storage(){return{get:e=>new Promise((t,a)=>{this.api.storage.local.get(e,e=>{this.handleRuntimeError(t,a,e)})}),set:e=>new Promise((t,a)=>{this.api.storage.local.set(e,()=>{this.handleRuntimeError(t,a,void 0)})}),remove:e=>new Promise((t,a)=>{this.api.storage.local.remove(e,()=>{this.handleRuntimeError(t,a,void 0)})})}}get runtime(){return{sendMessage:e=>new Promise(t=>{this.api.runtime.sendMessage(e,e=>{t(e)})}),onMessage:this.api.runtime.onMessage,getManifest:()=>this.api.runtime.getManifest(),openOptionsPage:()=>this.api.runtime.openOptionsPage()}}get tabs(){return{query:e=>new Promise(t=>{this.api.tabs.query(e,t)}),sendMessage:(e,t)=>new Promise(a=>{this.api.tabs.sendMessage(e,t,e=>{a(e)})})}}get commands(){return{onCommand:this.api.commands.onCommand}}},t={openRouterApiKey:void 0,targetLanguage:"tr",fontSize:16,lineHeight:1.5,darkMode:!1,openRouterModel:"google/gemini-2.0-flash-exp:free",schemaVersion:3},a=class{async get(a){try{const r=a?await e.storage.get(a):await e.storage.get([]);return r.lineHeight&&r.lineHeight>2&&(r.lineHeight=1.5,await this.set({lineHeight:1.5})),{...t,...r}}catch(e){return console.error("StorageManager.get error:",e),t}}async set(t){try{await e.storage.set(t)}catch(e){throw console.error("StorageManager.set error:",e),e}}async remove(t){try{await e.storage.remove(t)}catch(e){throw console.error("StorageManager.remove error:",e),e}}async clear(){try{const e="undefined"!=typeof chrome?chrome:browser;return new Promise(t=>{e.storage.local.clear(()=>{t()})})}catch(e){throw console.error("StorageManager.clear error:",e),e}}async getApiKey(){try{return(await this.get(["openRouterApiKey"])).openRouterApiKey||null}catch(e){return console.error("StorageManager.getApiKey error:",e),null}}async setApiKey(e){try{await this.set({openRouterApiKey:e})}catch(e){throw console.error("StorageManager.setApiKey error:",e),e}}async getTargetLanguage(){try{return(await this.get(["targetLanguage"])).targetLanguage||t.targetLanguage}catch(e){return console.error("StorageManager.getTargetLanguage error:",e),t.targetLanguage}}async setTargetLanguage(e){try{await this.set({targetLanguage:e})}catch(e){throw console.error("StorageManager.setTargetLanguage error:",e),e}}};function r(e){return`${function(){const e=new Date;return`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")} ${String(e.getHours()).padStart(2,"0")}:${String(e.getMinutes()).padStart(2,"0")}:${String(e.getSeconds()).padStart(2,"0")}`}()} [${e}]`}const s={log(e,...t){},warn(e,...t){const a=r("WARN");console.warn(`${a} ${e}`,...t)},error(e,...t){const a=r("ERROR");console.error(`${a} ${e}`,...t)}};async function n(e,t){const{maxRetries:a,delay:r,backoff:s="exponential",onError:n}=t;let i;for(let t=0;t<=a;t++)try{return await e()}catch(e){if(i=e,n&&t<a&&n(i,t),t<a){const e="exponential"===s?r*Math.pow(2,t):r*(t+1);await new Promise(t=>setTimeout(t,e))}}throw i}const i="exponential";class o extends Error{constructor(e,t,a=!1){super(e),this.statusCode=t,this.isRateLimitError=a,this.name="ApiError"}}class c extends Error{constructor(e="Request timeout"){super(e),this.name="TimeoutError"}}class h{constructor(){this.API_ENDPOINT="https://openrouter.ai/api/v1/chat/completions",this.config=null}async initialize(){const e=new a,t=await e.get(["openRouterApiKey","openRouterModel","openRouterProvider"]);this.config={apiKey:t.openRouterApiKey||"",model:t.openRouterModel||"google/gemini-2.0-flash-exp:free",provider:t.openRouterProvider}}async translate(e,t){if(this.config||await this.initialize(),!this.config?.apiKey)throw new Error("API key not configured");return n(async()=>{const a=this.buildPrompt(e,t),r={model:this.config.model,messages:[{role:"user",content:a}]};this.config.provider&&(r.provider={order:[this.config.provider]});const n=await this.fetchWithTimeout(this.API_ENDPOINT,{method:"POST",headers:{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json","HTTP-Referer":"https://github.com/doganaylab/geminitranslate"},body:JSON.stringify(r)});if(!n.ok){const e=await n.json(),t=429===n.status;throw s.error("OpenRouter API error:",e),new o(`API request failed: ${e.error?.message||n.statusText}`,n.status,t)}const i=await n.json();return this.parseResponse(i.choices[0].message.content,e.length)},{maxRetries:3,delay:1e3,backoff:i,onError:(e,t)=>{s.warn(`Translation attempt ${t+1} failed:`,e.message)}})}async fetchWithTimeout(e,t){const a=new AbortController,r=setTimeout(()=>a.abort(),3e4);try{const s=await fetch(e,{...t,signal:a.signal});return clearTimeout(r),s}catch(e){if(clearTimeout(r),"AbortError"===e.name)throw new c("Request timed out after 30000ms");throw e}}buildPrompt(e,t){return`Translate the following texts to ${t}. Return only the translations, one per line, without numbering:\n\n${e.join("\n")}`}parseResponse(e,t){const a=e.trim().split("\n").map(e=>e.trim()).filter(e=>e);return a.length!==t&&s.warn(`Expected ${t} translations, got ${a.length}`),a}async testConnection(){try{return this.config||await this.initialize(),await this.translate(["Hello"],"Japanese"),{success:!0,message:`Connection successful! Model: ${this.config?.model}`}}catch(e){return{success:!1,error:e instanceof Error?e.message:"Unknown error"}}}}const l=class{constructor(e=1e3){this.cache=new Map,this.maxSize=e}get(e){const t=this.cache.get(e);return t?(this.cache.delete(e),t.timestamp=Date.now(),this.cache.set(e,t),t.value):null}set(e,t){if(this.cache.has(e)&&this.cache.delete(e),this.cache.size>=this.maxSize){const e=this.cache.keys().next().value;void 0!==e&&this.cache.delete(e)}this.cache.set(e,{value:t,timestamp:Date.now()})}has(e){return this.cache.has(e)}delete(e){return this.cache.delete(e)}clear(){this.cache.clear()}size(){return this.cache.size}keys(){return Array.from(this.cache.keys())}getStats(){return{size:this.cache.size,maxSize:this.maxSize,usage:this.cache.size/this.maxSize*100}}evictOlderThan(e){const t=Date.now();let a=0;for(const[r,s]of this.cache.entries())t-s.timestamp>e&&(this.cache.delete(r),a++);return a}};class g{constructor(){this.memoryCache=new l(1e3),this.BATCH_SIZE=10,this.cacheHits=0,this.cacheMisses=0,this.initialized=!1,this.apiClient=new h}async initialize(){this.initialized||(await this.apiClient.initialize(),this.initialized=!0,s.log("TranslationEngine initialized"))}async translateBatch(e,t){if(!this.initialized)throw new Error("TranslationEngine not initialized. Call initialize() first.");if(0===e.length)return[];const a=new Array(e.length),r=[];for(let s=0;s<e.length;s++){const n=await this.getCachedTranslation(e[s],t);n?(a[s]=n,this.cacheHits++):(r.push(s),this.cacheMisses++)}if(r.length>0){const s=r.map(t=>e[t]),n=this.chunkArray(s,this.BATCH_SIZE),i=(await Promise.all(n.map(e=>this.translateWithRetry(e,t)))).flat();for(let s=0;s<r.length;s++){const n=r[s],o=i[s];a[n]=o,await this.setCachedTranslation(e[n],t,o)}}return a}async getCachedTranslation(e,t){const a=this.getCacheKey(e,t),r=this.getFromMemoryCache(a);if(r)return r;const s=this.getFromStorage(sessionStorage,a);if(s)return this.promoteToMemoryCache(a,s),s;const n=this.getFromStorage(localStorage,a);return n?(this.promoteToHigherTiers(a,n),n):null}getFromMemoryCache(e){return this.memoryCache.get(e)||null}getFromStorage(e,t){try{const a=e.getItem(t);if(a)return JSON.parse(a).translation}catch(e){s.warn(`Storage read error for key ${t}:`,e)}return null}promoteToMemoryCache(e,t){this.memoryCache.set(e,t)}promoteToHigherTiers(e,t){this.memoryCache.set(e,t);const a={text:e.split(":")[1],translation:t};this.saveToStorage(sessionStorage,e,a)}async setCachedTranslation(e,t,a){const r=this.getCacheKey(e,t),s={text:e,translation:a};this.memoryCache.set(r,a),this.saveToStorage(sessionStorage,r,s),this.saveToStorage(localStorage,r,s)}saveToStorage(e,t,a){try{e.setItem(t,JSON.stringify(a))}catch(e){s.warn(`Storage write error for key ${t}:`,e)}}getCacheKey(e,t){return`translation:${e}:${t}`}async translateWithRetry(e,t){return n(async()=>this.apiClient.translate(e,t),{maxRetries:3,delay:1e3,backoff:i,onError:(e,t)=>{s.warn(`Translation retry attempt ${t+1}:`,e.message)}})}async clearCache(e="all"){switch(e){case"memory":this.memoryCache.clear(),s.log("Memory cache cleared");break;case"session":this.clearStorageCache(sessionStorage,"Session storage");break;case"local":this.clearStorageCache(localStorage,"Local storage");break;case"all":await this.clearCache("memory"),await this.clearCache("session"),await this.clearCache("local"),s.log("All caches cleared")}}clearStorageCache(e,t){try{const a=[];for(let t=0;t<e.length;t++){const r=e.key(t);r?.startsWith("translation:")&&a.push(r)}a.forEach(t=>e.removeItem(t)),s.log(`${t} cache cleared`)}catch(e){s.error(`${t} clear error:`,e)}}async getCacheStats(){return{memory:this.memoryCache.size(),session:this.getStorageCacheSize(sessionStorage),local:this.getStorageCacheSize(localStorage),hitRate:this.calculateHitRate()}}getStorageCacheSize(e){try{let t=0;for(let a=0;a<e.length;a++){const r=e.key(a);r?.startsWith("translation:")&&t++}return t}catch(e){return s.warn("Storage access error:",e),0}}calculateHitRate(){const e=this.cacheHits+this.cacheMisses;return e>0?this.cacheHits/e*100:0}chunkArray(e,t){const a=[];for(let r=0;r<e.length;r+=t)a.push(e.slice(r,r+t));return a}}class d{constructor(e,t){this.engine=e,this.client=t,this.actionHandlers=new Map([["requestTranslation",this.handleRequestTranslation.bind(this)],["clearCache",this.handleClearCache.bind(this)],["getCacheStats",this.handleGetCacheStats.bind(this)],["testConnection",this.handleTestConnection.bind(this)]])}async handle(e,t,a){try{if(!e.action)return a({success:!1,error:"Invalid message format: missing action"}),!0;const t=e.action,r=e.payload||{},s=this.actionHandlers.get(t);s?await s(r,a):a({success:!1,error:`Unknown action: ${t}`})}catch(e){s.error("MessageHandler: Unexpected error",e),a({success:!1,error:e instanceof Error?e.message:"An unexpected error occurred"})}return!0}async handleRequestTranslation(e,t){try{const{texts:a,targetLanguage:r}=e;if(!a||!Array.isArray(a))return void t({success:!1,error:"Invalid payload: texts must be an array"});if(!r)return void t({success:!1,error:"Invalid payload: targetLanguage is required"});t({success:!0,data:{translations:await this.engine.translateBatch(a,r)}})}catch(e){s.error("MessageHandler: Translation error",e),t({success:!1,error:e instanceof Error?e.message:"Translation failed"})}}async handleClearCache(e,t){try{const a=e.layer||"all";await this.engine.clearCache(a),t({success:!0,data:{message:"Cache cleared successfully"}})}catch(e){s.error("MessageHandler: Clear cache error",e),t({success:!1,error:e instanceof Error?e.message:"Failed to clear cache"})}}async handleGetCacheStats(e,t){try{t({success:!0,data:await this.engine.getCacheStats()})}catch(e){s.error("MessageHandler: Get cache stats error",e),t({success:!1,error:e instanceof Error?e.message:"Failed to get cache stats"})}}async handleTestConnection(e,t){try{t({success:!0,data:await this.client.testConnection()})}catch(e){s.error("MessageHandler: Test connection error",e),t({success:!1,error:e instanceof Error?e.message:"Connection test failed"})}}}var m;!function(e){e.TRANSLATE_PAGE="translate",e.TRANSLATE_SELECTION="translateSelection",e.TRANSLATE_CLIPBOARD="translateClipboard",e.REQUEST_TRANSLATION="requestTranslation",e.RESET="reset",e.TRANSLATION_STARTED="translationStarted",e.TRANSLATION_PROGRESS="translationProgress",e.TRANSLATION_COMPLETED="translationCompleted",e.TRANSLATION_ERROR="translationError",e.SETTINGS_CHANGED="settingsChanged",e.API_KEY_UPDATED="apiKeyUpdated",e.TEST_CONNECTION="testConnection"}(m||(m={}));class u{constructor(e,t="Japanese"){this.messageBus=e,this.targetLanguage=t,this.commandHandlers=new Map([["translate-page",this.sendTranslatePageMessage.bind(this)],["translate-selection",this.sendTranslateSelectionMessage.bind(this)],["translate-clipboard",this.sendTranslateClipboardMessage.bind(this)]])}async handle(t,a){try{let r=a;if(!r){const t=await e.tabs.query({active:!0,currentWindow:!0});if(0===t.length)return void s.warn("CommandHandler: No active tab found");r=t[0]}if(!r.id)return void s.warn("CommandHandler: Active tab has no id");const n=this.commandHandlers.get(t);n?await n(r.id):s.warn("CommandHandler: Unknown command",t)}catch(e){s.error("CommandHandler: Error handling command",e)}}async handleMessage(e,t){try{switch(e.type){case m.TRANSLATE_PAGE:await this.sendTranslatePageMessage(t);break;case m.TRANSLATE_SELECTION:await this.sendTranslateSelectionMessage(t);break;case m.TRANSLATE_CLIPBOARD:await this.sendTranslateClipboardMessage(t);break;default:s.warn("CommandHandler: Unknown message type",e.type)}}catch(e){s.error("CommandHandler: Error handling message",e)}}async sendTranslatePageMessage(e){try{await this.messageBus.sendToTab(e,{type:m.TRANSLATE_PAGE,payload:{targetLanguage:this.targetLanguage}})}catch(e){throw s.error("CommandHandler: Failed to send message",e),e}}async sendTranslateSelectionMessage(e){try{await this.messageBus.sendToTab(e,{type:m.TRANSLATE_SELECTION,payload:{targetLanguage:this.targetLanguage}})}catch(e){throw s.error("CommandHandler: Failed to send message",e),e}}async sendTranslateClipboardMessage(e){try{await this.messageBus.sendToTab(e,{type:m.TRANSLATE_CLIPBOARD,payload:{targetLanguage:this.targetLanguage}})}catch(e){throw s.error("CommandHandler: Failed to send message",e),e}}}class y{constructor(){this.listeners=new Map}async send(t){const a={...t,timestamp:t.timestamp||Date.now()};return e.runtime.sendMessage(a)}async sendToTab(t,a){const r={...a,timestamp:a.timestamp||Date.now()};return e.tabs.sendMessage(t,r)}listen(t,a){const r=(e,r,s)=>(!a||e.type===a)&&(t(e,r,s)||!1);this.listeners.set(t,r),e.runtime.onMessage.addListener(r)}unlisten(t){const a=this.listeners.get(t);a&&(e.runtime.onMessage.removeListener(a),this.listeners.delete(t))}}new y,(new class{constructor(){this.messageHandler=null,this.commandHandler=null,this.engine=null,this.client=null,this.messageBus=new y}async start(){try{if(s.log("BackgroundService (Firefox): Starting..."),this.engine=new g,await this.engine.initialize(),this.client=this.engine.apiClient,!this.client)throw new Error("Failed to initialize OpenRouterClient");this.messageHandler=new d(this.engine,this.client),this.commandHandler=new u(this.messageBus),this.setupMessageListener(),this.setupCommandListener(),s.log("BackgroundService (Firefox): Started successfully")}catch(e){s.error("BackgroundService (Firefox): Failed to start",e)}}setupMessageListener(){browser.runtime.onMessage.addListener((e,t,a)=>"translate"===e.type||"translateSelection"===e.type||"translateClipboard"===e.type?(this.commandHandler&&t.tab?.id&&this.commandHandler.handleMessage(e,t.tab.id),!0):!!this.messageHandler&&(this.messageHandler.handle(e,t,a),!0)),s.log("BackgroundService (Firefox): Message listener registered")}setupCommandListener(){browser.commands.onCommand.addListener(e=>{this.commandHandler&&browser.tabs.query({active:!0,currentWindow:!0}).then(t=>{t[0]&&this.commandHandler.handle(e,t[0])})}),s.log("BackgroundService (Firefox): Command listener registered")}}).start()})();